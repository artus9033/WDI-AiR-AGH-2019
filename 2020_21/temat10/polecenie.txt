1. Pierwiastki równania  kwadratowego (O)

Napisz funkcję obliczającą rzeczywiste pierwiastki równania  kwadratowego. W main wprowadź z klawiatury współczynniki a,b,c równania postaci

ax2+bx+c = 0

zawołaj napisaną funkcję i  wypisz rozwiązania tego równania.  Funkcja ma zwracać (przez return) liczbę znalezionych miejsc zerowych. Ponadto, oprócz parametrów a, b, i c funkcja ma mieć dwa dodatkowe parametry wyjściowe - wskaźniki otrzymujące adresy zmiennych pod które funkcja będzie 'wrzucać' znalezione pierwiastki. Przypominam, że nie wolno używać zmiennych globalnych. Zmienne przechowujące pierwiastki powinny być typu rzeczywistego.


2. Znajdowanie znaku w napisie (O)

Napisz funkcję:

char * znajdz_znak(char *napis, char szuk_znak);

która szuka  znaku szuk_znak w napisie (tablicy) napis, i zwraca adres pierwszego znalezionego znaku (elementu tablicy) lub NULL w wypadku nieznalezienia.

Użyj funkcji w programie głównym - zadeklaruj tablicę o wybranym przez siebie rozmiarze (rozmiar zdefiniuj za pomocą #define, pamiętając o wielkich literach), wczytaj zawartość z klawiatury za pomocą fgets (patrz niżej) i wywołaj funkcję znajdz_znak z tą tablicą i wybranym przez siebie znakiem.

W main-ie należy wypisać zawartość pamięci znajdującej się  pod zwróconym przez funkcję adresem lub komunikat o nieznalezieniu znaku, kiedy zwrócony wskaźnik na wartość NULL. Przetestuj program raz wpisując napis zawierający szukaną literę, a drugi raz bez takiej litery.

Deklaracja funkcji fgets:  char * fgets(char *tablica, int rozmiar_tablicy, FILE *strumien_danych).  Jako strumien_danych należy wpisać stdin - jest to standardowa globalna zmienna oznaczająca domyślnie klawiatuę.

Przykładowe wczytanie napisu do 10-cio elementowej tablicy znaków tab z użyciem fgets:

fgets(tab, 10, stdin);


3. Tablica napisów

Dana jest tablica napisów: char *tab[5] = {"Kot ma Ale", "Ala ma kota", "Ola ma psa", "Pies ma pchly", "Ala nie lubi Oli"};
Napisz funkcję sortującą dowolną tablicę napisów wg alfabetu (zakładamy, że nie  używamy polskich liter).  Przy sortowaniu można wykorzystać funkcję strcmp(char *s1, char *s2) (zadeklarowaną w string.h), która zwraca wartość zero, gdy s1 jest takie same jak s2, mniejszą od zero gdy str1 < str2 oraz większą od zero gdy str1 > str2. Tablica ma być sortowana 'w miejscu' (bez użycia tablicy pomocniczej). Funkcja ma mieć dwa parametry - tablicę i jej rozmiar  i nie ma nic zwracać.

Do wypisania tablicy mozna wykorzystać funkcję puts o deklaracji, wypisującą podany napis na ekranie:

int puts(char *s);


